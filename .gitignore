# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to include the cache and configuration directories
#  in version control, but they should be added to this gitignore in a case-by-case basis.
#  Common PyCharm directories:
.idea/
*.iws
*.iml
*.ipr
out/

# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# SageMaker Thai OCR Project Specific

# Training data (too large for git)
train_data_thai_paddleocr_*/
thai-letters/datasets/converted/train_data_thai_paddleocr_*/

# Model files (large binary files)
models/sagemaker_trained/
models/*/best_model/
models/*/output/
*.pdparams
*.pdopt
*.pdmodel
*.states

# Test results and outputs
*_RESULTS_*.json
*_TEST_RESULTS_*.json
*_ANALYSIS_*.json
*_REPORT_*.json
TRAINED_MODEL_*_RESULTS_*.json
VISUAL_ANALYSIS_REPORT_*.json

# PaddleOCR directory (external dependency)
PaddleOCR/

# Output directories
output/
inference/
predicts_*.txt

# Configuration files with local paths
config_local.yml
*_local.yml

# Terraform state files (contain sensitive info)
*.tfstate
*.tfstate.*
*.tfvars
!*.tfvars.example
*.tfvars.json
.terraform/
.terraform.lock.hcl
terraform-provider-*
crash.log
crash.*.log

# AWS credentials and config
.aws/
aws-exports.js
.env.aws
aws-credentials.json

# SageMaker specific
.sagemaker/
sagemaker-*/
sm-*/
job-dir/
model.tar.gz

# Machine Learning / AI specific
# Dataset directories

# Keep folder structure but ignore all contents
thai-letters/datasets/converted/*
thai-letters/datasets/raw/*
thai-letters/datasets/samples/*

# Keep the README.md files in each folder
!thai-letters/datasets/converted/README.md
!thai-letters/datasets/raw/README.md
!thai-letters/datasets/samples/README.md

data/
train_data_*/
synthetic_data_*/
real_data_*/
annotations/
labels/

# Model files and checkpoints
models/
checkpoints/
*.pkl
*.pth
*.pt
*.h5
*.hdf5
*.pb
*.tflite
*.onnx
*.tar.gz
*.zip

# PaddleOCR specific
PaddleOCR/
output/
inference/
pretrain_models/
*.pdparams
*.pdopt
*.pdmodel

# Training logs and outputs
logs/
tensorboard_logs/
wandb/
mlruns/
.mlflow/

# Thai language specific
thai_fonts/
*.ttf
*.otf

# Generated images and processed data
generated_images/
processed_images/
synthesized_images/
*.jpg
*.jpeg
*.png
*.bmp
*.tiff
*.tif
!sample_images/
!demo_images/
!**/README.md
!docs/**/*.png
!docs/**/*.jpg

# Keep specific sample files for documentation
!sample_*.jpg
!sample_*.png
!demo_*.jpg
!demo_*.png

# Temporary files
*.tmp
*.temp
temp/
tmp/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
*~

# Docker
.dockerignore
Dockerfile.bak

# Backup files
*.bak
*.backup
*.orig

# Configuration files with sensitive data
config.json
secrets.json
credentials.json
.secrets

# SageMaker specific
.sagemaker/
sagemaker-*/
sm-*/

# Local testing
test_output/
test_results/
*.test

# Documentation build
doc/_build/
doc/build/

# Large files (consider using Git LFS)
*.bin
*.dat
*.index
*.tar.gz
*.zip
*.7z

# Development and testing specific
.python-version
requirements-dev.txt
debug/
debug_*
test_*.py
*_test_*.py

# Jupyter Notebook checkpoints and outputs
.ipynb_checkpoints/
*/.ipynb_checkpoints/
*-checkpoint.ipynb

# Virtual environments (project specific)
venv/
.venv/
sagemaker_thai_ocr_env/

# IDE specific
.vscode/settings.json
.vscode/launch.json
*.code-workspace

# Temporary development files
scratch/
experiments/
playground/
temp_*
tmp_*

# Cache directories
.cache/
__pycache__/
.pytest_cache/
*/.pytest_cache/
